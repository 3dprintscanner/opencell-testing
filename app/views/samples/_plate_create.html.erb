<div class="container">
  <br>

  <div class="row">
    <div class="col-md-6">
      <h3>1) Scan barcode</h3>
      <hr>
      <div id="loadingMessage">ðŸŽ¥ Unable to access video stream (please make sure you have a webcam enabled)</div>
      <canvas id="canvas" hidden></canvas>
    </div>
    <div class="col-md-6">      
      <h3>2) Insert sample into well</h3>
      <hr>
      <div id="output" class="text-center" hidden>
        <br>
        <h3 hidden>Place sample:<pre id="outputData"></pre>into well:<pre id="wellToInsertSample"></pre></h3>
        <br><br><br>
        <button id="nextSampleButton" type="button" class="btn btn-success btn-block btn-lg">Next Sample</button>
      </div>
    </div>
  </div>

  <br><br>
  <h3>Plate Status</h3>
  <hr>
  <%= form_for(:samples, url: step3_sample_bulkprepared_path) do |form| %>
    <table class="table table-hover table-bordered">
        <thead class="thead-dark text-center">
        <tr>
          <th><!-- row letter --></th>
          <% (1..12).each do |col| %>
            <th><%= col %></th>
          <% end %>
        </tr>
        </thead>
        <tbody>
          <% ('A'..'H').each do |row| %>
            <tr>
              <td class="dark-cell text-center"><%= row %></td>
              <% (1..12).each do |col| %>
                <td>
                  <%= hidden_field_tag 'wells[][row]', row  %>
                  <%= hidden_field_tag 'wells[][col]', col  %>
                  <input type="text" class="form-control" id="wells[][uid]">
                </td>
              <% end %>
            </tr>
          <% end %>
        </tbody>
      </table>
      <div class="actions">
        <%= form.submit "Create Plate", :class => 'btn btn-dark float-right' %>
      </div>
    <% end %>
</div>
<br><br>

<script>
  var video = document.createElement("video");
  var canvasElement = document.getElementById("canvas");
  var canvas = canvasElement.getContext("2d");
  var loadingMessage = document.getElementById("loadingMessage");
  var outputContainer = document.getElementById("output");
  var outputData = document.getElementById("outputData");
  var cell_index = 0;

  function drawLine(begin, end, color) {
    canvas.beginPath();
    canvas.moveTo(begin.x, begin.y);
    canvas.lineTo(end.x, end.y);
    canvas.lineWidth = 4;
    canvas.strokeStyle = color;
    canvas.stroke();
  }

  // Use facingMode: environment to attemt to get the front camera on phones
  navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function(stream) {
    video.srcObject = stream;
    video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
    video.play();
    requestAnimationFrame(tick);
  });

  function tick() {
    var qr_code_read = false;
    loadingMessage.innerText = "âŒ› Loading video..."
    if (video.readyState === video.HAVE_ENOUGH_DATA) {
      loadingMessage.hidden = true;
      canvasElement.hidden = false;
      outputContainer.hidden = true;

      canvasElement.height = video.videoHeight;
      canvasElement.width = video.videoWidth;
      canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
      var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
      var code = jsQR(imageData.data, imageData.width, imageData.height, {
        inversionAttempts: "dontInvert",
      });
      if (code) {
        drawLine(code.location.topLeftCorner, code.location.topRightCorner, "#FF3B58");
        drawLine(code.location.topRightCorner, code.location.bottomRightCorner, "#FF3B58");
        drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, "#FF3B58");
        drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, "#FF3B58");
        outputData.parentElement.hidden = false;
        outputData.innerText = code.data;

        if (code.data){
          new Audio('/ping.mp3').play();
          console.log(code.data);
          $("input.form-control:eq( " + cell_index + " )").val(code.data);
          var row = $("input.form-control:eq( " + cell_index + " )").siblings('#wells__row')[0].value;
          var col = $("input.form-control:eq( " + cell_index + " )").siblings('#wells__col')[0].value;
          $("#wellToInsertSample").text(row + col);
          qr_code_read = true;
          outputContainer.hidden = false;
        }

      } else {
        outputData.parentElement.hidden = true;
      }
    }
    if (!qr_code_read){
      requestAnimationFrame(tick);
    }
  }

  $(document).ready(function() {
    $("#nextSampleButton").on( "click", function() {
      cell_index ++;
      tick();
    });
  });

</script>